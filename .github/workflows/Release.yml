name: Github Release with tag
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write

jobs:
  release_build:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          fetch-depth: 0

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Install GMD image for baseline profile generation
        run: yes | "$ANDROID_HOME"/cmdline-tools/latest/bin/sdkmanager "system-images;android-33;aosp_atd;x86_64"

      - name: Accept Android licenses
        run: yes | "$ANDROID_HOME"/cmdline-tools/latest/bin/sdkmanager --licenses || true

      - name: Build release variant
        run: ./gradlew app:bundleProdRelease
          -Pandroid.testInstrumentationRunnerArguments.androidx.benchmark.enabledRules=BaselineProfile
          -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect"
          -Pandroid.experimental.testOptions.managedDevices.emulator.showKernelLogging=true
          -Pandroid.experimental.androidTest.numManagedDeviceShards=1
          -Pandroid.experimental.testOptions.managedDevices.maxConcurrentDevices=1

      - name: Find APP File
        id: find_output
        run: |
          app_file=$(find ./app -name "*.aab" | head -n 1)
          echo "APP_FILE=${app_file}" >> $GITHUB_ENV

      - name: Upload APK To Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: internal
          file: ${{ env.APP_FILE }}

      - name: Send Slack Notification
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              text: "Hi Team, New build was uploaded to Firebase App Distribution :among_us_orange_dance:\n",
              attachments: [{
                "author_name": "${{ github.actor }}",
                "author_link": "https://github.com/${{ github.actor }}",
                "author_icon": "https://github.com/${{ github.actor }}.png?size=32",
                color: 'good',
                fields: [{
                     title: "Build Version",
                     value: "1.3.0",
                     short: true
                 },
                 {
                     title: "Branch",
                     value: "${{ github.head_ref || github.ref_name }}",
                     short: true
                 },
                 {
                     title: "Recent Commits",
                     value: "```Hi```",
                     short: false
                }],
                "footer": "Easy Group(GitHub Action)"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}